import type { FileType } from "..";

/** Тип сущности, к которой относится сообщение */
export enum MessageEntityType {
  /** беседа/канал */
  Discussion = "discussion",
  /** обсуждение */
  Thread = "thread",
  /** сотрудник */
  User = "user",
}

/** Сообщение */
export interface Message {
  /** Идентификатор сообщения */
  id: number;
  /** Тип сущности, к которой относится сообщение */
  entity_type: MessageEntityType;
  /** Идентификатор сущности, к которой относится сообщение (беседы/канала, обсуждения или сотрудника) */
  entity_id: number;
  /** Идентификатор чата, в котором находится сообщение */
  chat_id: number;
  /** Текст сообщения */
  content: string;
  /** Идентификатор пользователя, создавшего сообщение */
  user_id: number;
  /** Дата и время сообщения (ISO-8601, UTC+0) в формате `YYYY-MM-DDThh:mm:ss.sssZ` */
  created_at: string;
  /** Прикреплённые файлы */
  files: {
    /** Идентификатор файла */
    id: number;
    /** Путь к файлу */
    key: string;
    /** Название файла */
    name: string;
    /** Тип файла */
    type: FileType;
  }[];
  /** Обсуждение сообщения. Возвращается как null, если у сообщения нет комментариев. */
  thread: {
    /** Идентификатор обсуждения (используется для отправки новых комментариев) */
    id: number;
    /** Идентификатор чата обсуждения (используется для отправки новых комментариев в обсуждение и получения списка комментариев) */
    chat_id: number;
  } | null;
  /** Идентификатор сообщения, к которому написан ответ. Возвращается как null, если сообщение не является ответом. */
  parent_message_id: number | null;
}

export interface PostMessagesRequest {
  /** Собранный объект параметров создаваемого сообщения */
  message: {
    /**
     * Тип сущности
     *
     * @default MessageEntityType.Discussion
     */
    entity_type?: MessageEntityType;
    /** Идентификатор сущности */
    entity_id: number;
    /** Текст сообщения */
    content: string;
    /** Прикреплённые файлы */
    files?: {
      /** Путь к файлу, полученный в результате загрузки файла (каждый файл в каждом сообщении должен иметь свой уникальный key, не допускается использование одного и того же key в разных сообщениях) */
      key: string;
      /** 	Название файла, которое вы хотите отображать пользователю (рекомендуется писать вместе с расширением) */
      name: string;
      /** Тип файла */
      type: FileType;
      /** Размер файла в байтах, отображаемый пользователю */
      size: number;
    }[];
    /** Идентификатор сообщения. Указывается в случае, если вы отправляете ответ на другое сообщение. */
    parent_message_id?: number;
  };
}

export interface GetMessagesRequest {
  /** Идентификатор чата (беседа, канал, диалог или чат обсуждений) */
  chat_id: number;
  /**
   * Количество возвращаемых сущностей за один запрос (максимум 50)
   *
   * @default 25
   * */
  per?: number;
  /**
   * 	Страница выборки
   *
   * @default 1
   */
  page?: number;
}

export interface PutMessagesRequest {
  /** Собранный объект параметров редактируемого сообщения */
  message: Required<Pick<Message, "content" | "files">>;
}
